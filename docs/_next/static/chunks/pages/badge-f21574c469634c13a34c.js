_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[9],{EGG0:function(e,a,t){(window.__NEXT_P=window.__NEXT_P||[]).push(["/badge",function(){return t("hnk1")}])},hnk1:function(e,a,t){"use strict";t.r(a);var n=t("nKUr"),r=t("q1tI");var s=function(e){var a=e.children,t=e.appearance,s=e.max,d=Object(r.useState)(""),c=d[0],i=d[1],o=Object(r.useState)(""),l=o[0],p=o[1],m=Object(r.useState)("0"),b=m[0],j=m[1];Object(r.useEffect)((function(){x()}),[]);var x=function(){if("default"!==t&&t)if("primary"===t)i("text-gray-200"),p(" bg-blue-700"),j(a);else if("primaryInverted"===t)i(" text-blue-500 "),p(" bg-white"),j(a);else if("important"===t)i(" text-gray-200"),p(" bg-red-500"),j(a);else if("added"===t){if(i(" text-green-700 "),p(" bg-green-100 "),s&&s<a)return j(s+"+");if(s)return j(a+"+");j(a)}else"removed"===t&&(i(" text-red-700 "),p(" bg-red-100 "),j(a));else i("text-grey-600"),p(" bg-gray-200 "),j(a)};return Object(n.jsx)("div",{className:"flex flex-col px-10 ".concat("primaryInverted"===t?"w-full py-4 bg-blue-700  ":""),children:Object(n.jsx)("div",{className:"text-sm leading-none font-normal rounded-full px-2 py-1 w-max flex items-center justify-center "+c+l,children:b})})},d=t("MvPf"),c=t("Qe+f");a.default=function(){return Object(n.jsxs)("div",{className:"flex flex-col  w-full flex-start",children:[Object(n.jsx)(d.a,{title:"Badge",description:"A badge is a visual indicator for numeric values such as tallies and scores."}),Object(n.jsxs)("section",{children:[Object(n.jsx)(d.a,{subTitle:"Default",subDescription:"The default form of a badge."}),Object(n.jsx)("div",{className:"py-2",children:Object(n.jsx)(s,{appearance:"default",children:"8"})}),Object(n.jsx)("div",{className:"w-full pt-3",children:Object(n.jsx)(c.a,{code:"\n    import React from 'react';\n    import Badges from '@neoKit/badge';\n    const BadgeDefaultExample = () => {\n      return <Badges>{8}</Badges>;\n    };\n    \n    export default BadgeDefaultExample;"})})]}),Object(n.jsxs)("section",{children:[Object(n.jsx)(d.a,{subTitle:"Primary",subDescription:"Use a primary badge to help draw attention to new or updated information. "}),Object(n.jsx)("div",{className:"py-2",children:Object(n.jsx)(s,{appearance:"primary",children:"5"})}),Object(n.jsx)("div",{className:"w-full pt-3",children:Object(n.jsx)(c.a,{code:"\n    import React from 'react';\n    import Badges from '@neoKit/badges';\n    \n    const BadgePrimaryExample = () => {\n      return <Badges appearance=\"primary\">{5}</Badges>;\n    };\n    \n    export default BadgePrimaryExample;\n    "})})]}),Object(n.jsxs)("section",{children:[Object(n.jsx)(d.a,{subTitle:"Primary inverted",subDescription:"Use a primaryInverted badge when high contrast against a darker background color is needed.Use a primary badge to help draw attention to new or updated information. "}),Object(n.jsx)("div",{className:"py-2",children:Object(n.jsx)(s,{appearance:"primaryInverted",children:"5"})}),Object(n.jsx)("div",{className:"w-full pt-3",children:Object(n.jsx)(c.a,{code:"\n    import React from 'react';\n    import Badges from '@neoKit/badges';\n    \n    const BadgePrimaryInvertedExample = () => {\n      return <Badges appearance='primaryInverted'>{8}</Badges>;\n    };\n    \n    export default BadgePrimaryInvertedExample;\n    "})})]}),Object(n.jsxs)("section",{children:[Object(n.jsx)(d.a,{subTitle:"Important",subDescription:"Use an important badge to call attention to information that needs to stand out. For example, notifications in Confluence. "}),Object(n.jsx)("div",{className:"py-2",children:Object(n.jsx)(s,{appearance:"important",children:"25"})}),Object(n.jsx)("div",{className:"w-full pt-3",children:Object(n.jsx)(c.a,{code:"\n    import React from 'react';\n    import Badges from '@neoKit/badges';\n    \n    const BadgeImportantExample = () => {\n      return <Badges appearance=\"important\">{25}</Badges>;\n    };\n    \n    export default BadgeImportantExample;\n    "})})]}),Object(n.jsxs)("section",{children:[Object(n.jsx)(d.a,{subTitle:"Added",subDescription:"Use an added appearance to show additions. For example, when characters are added to a line of code in Bitbucket. "}),Object(n.jsx)("div",{className:"py-2",children:Object(n.jsx)(s,{appearance:"added",children:"+100"})}),Object(n.jsx)("div",{className:"w-full pt-3",children:Object(n.jsx)(c.a,{code:"\n    import React from 'react';\n    import Badges from '@neoKit/badges';\n    \n    const BadgeAddedExample = () => {\n      return <Badges appearance=\"added\">+100</Badges>;\n    };\n    \n    export default BadgeAddedExample ;\n    "})})]}),Object(n.jsxs)("section",{children:[Object(n.jsx)(d.a,{subTitle:"Removed          ",subDescription:"Use a removed appearance to show removals. For example, when characters are removed from a line of code in Bitbucket."}),Object(n.jsx)("div",{className:"py-2",children:Object(n.jsx)(s,{appearance:"removed",children:"-100"})}),Object(n.jsx)("div",{className:"w-full pt-3",children:Object(n.jsx)(c.a,{code:"\n    import React from 'react';\n    import Badges from '@neoKit/badges';\n    \n    const BadgeRemovexample = () => {\n      return <Badges appearance=\"removed\">-100</Badges>;\n    };\n    \n    export default BadgeRemoveExample;\n    "})})]}),Object(n.jsxs)("section",{children:[Object(n.jsx)(d.a,{subTitle:"Max value",subDescription:"The max prop can be used to cap the value of a badge. When the value to display is greater than the max prop, a + will automatically be appended. The default max value of a badge is 99. "}),Object(n.jsx)("div",{className:"py-2",children:Object(n.jsx)(s,{appearance:"added",max:500,children:"1000"})}),Object(n.jsx)("div",{className:"w-full pt-3",children:Object(n.jsx)(c.a,{code:"\n    import React from 'react';\n    import Badges from '@neoKit/badges';\n    \n    const BadgeMaxValuexample = () => {\n      return <Badges appearance=\"added\" max={500}>\n      {1000}</Badges>;\n    };\n    \n    export default BadgeMaxValuexample;\n    "})})]})]})}}},[["EGG0",0,1,2,3]]]);