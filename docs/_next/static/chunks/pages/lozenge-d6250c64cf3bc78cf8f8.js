_N_E=(window.webpackJsonp_N_E=window.webpackJsonp_N_E||[]).push([[22],{"7Cet":function(e,n,s){"use strict";var t=s("nKUr");s("q1tI");n.a=function(e){var n=e.children,s=e.appearance,c=e.isBold,a=e.maxWidth;return Object(t.jsx)("div",{className:"flex flex-col w-max ",children:Object(t.jsx)("p",{className:"text-xs font-bold  p-1 rounded  uppercase truncate  ".concat(function(){switch(null===s||void 0===s?void 0:s.trim()){case"success":return c?" bg-green-700 text-white success-bold ":" text-green-700 bg-green-200 success ";case"removed":return c?" bg-red-600 text-white removed-bold ":" text-red-700 bg-red-100 removd  ";case"inprogress":return c?" bg-blue-600 text-white inprogress-bold ":" text-blue-700 bg-blue-100 inprogress ";case"new":return c?" bg-purple-700 text-white new-bold ":" text-purple-700 bg-purple-100  old";case"moved":return c?" bg-yellow-600 text-white moved-bold ":" text-yellow-700 bg-yellow-100 moved ";default:return c?" bg-gray-600 text-white  default-bold":" bg-gray-300 text-gray-800 default "}}()),style:{maxWidth:a||"200px"},children:n})})}},Lj70:function(e,n,s){(window.__NEXT_P=window.__NEXT_P||[]).push(["/lozenge",function(){return s("xIih")}])},xIih:function(e,n,s){"use strict";s.r(n);var t=s("nKUr"),c=(s("q1tI"),s("7Cet")),a=s("MvPf"),o=s("Qe+f");n.default=function(){return Object(t.jsxs)("div",{className:"flex flex-col  w-full flex-start",children:[Object(t.jsx)(a.a,{title:"Lozenge",description:"A lozenge is a visual indicator used to highlight an item's status for quick recognition."}),Object(t.jsxs)("section",{children:[Object(t.jsx)(a.a,{subHead:"Appearance",subDescription:"Lozenges are either subtle or bold and use color to indicate meanings that users can learn and recognize across products. Change the lozenge's appearance to bold by setting isBold."}),Object(t.jsx)(a.a,{subTitle:"Default",subDescription:"Use default lozenges for a general status or state, such as: to do, unavailable, minor, not started."}),Object(t.jsxs)("div",{className:"py-2 flex flex-col gap-2",children:[Object(t.jsx)("div",{children:Object(t.jsx)(c.a,{children:"DEFAULT"})}),Object(t.jsx)("div",{children:Object(t.jsx)(c.a,{isBold:!0,children:"DEFAULT BOLD"})})]}),Object(t.jsx)("div",{className:"w-full pt-3",children:Object(t.jsx)(o.a,{code:"\n          import React, { useState } from \"react\";\n          import { Lozenges } from '@neoKit/lozenges';\n        \n          const DefaultExample = () => {\n            return (\n                <>\n                <div>\n                  <Lozenges>Default</Lozenges>\n                </div>\n                <div>\n                  <Lozenges isBold>Default bold</Lozenges>\n                </div>\n              </>\n            );\n          };\n          export default DefaultExample; \n"})})]}),Object(t.jsxs)("section",{children:[Object(t.jsx)(a.a,{subTitle:"Success",subDescription:"Use success lozenges to represent a constructive status or state, such as: available, completed, approved, resolved, added."}),Object(t.jsxs)("div",{className:"py-2 flex flex-col gap-2",children:[Object(t.jsx)("div",{children:Object(t.jsx)(c.a,{appearance:"success",children:"Success"})}),Object(t.jsx)("div",{children:Object(t.jsx)(c.a,{appearance:"success",isBold:!0,children:"Success bold"})})]}),Object(t.jsx)("div",{className:"w-full pt-3",children:Object(t.jsx)(o.a,{code:'\nimport React, { useState } from "react";\nimport { Lozenges } from \'@neoKit/lozenges\';\n\nconst SuccessLozengestExample = () => {\n  return (\n      <>\n      <div>\n      <Lozenges appearance="success">Success</Lozenges>\n    </div>\n    <div>\n      <Lozenges appearance="success" isBold>\n        Success bold\n      </Lozenges>\n    </div>\n    </>\n  );\n};\nexport default  SuccessLozengestExample;\n'})})]}),Object(t.jsxs)("section",{children:[Object(t.jsx)(a.a,{subTitle:"Removed",subDescription:"Use removed lozenges to represent a critical or problematic status or state, such as: errors, declined, deleted, failed."}),Object(t.jsxs)("div",{className:"py-2 flex flex-col gap-2",children:[Object(t.jsx)("div",{children:Object(t.jsx)(c.a,{appearance:"removed",children:"Removed"})}),Object(t.jsx)("div",{children:Object(t.jsx)(c.a,{appearance:"removed",isBold:!0,children:"Removed bold"})})]}),Object(t.jsx)("div",{className:"w-full pt-3",children:Object(t.jsx)(o.a,{code:"\n  import React, { useState } from \"react\";\n  import { Lozenges } from '@neoKit/lozenges';\n  \n  const RemoveLozengestExample = () => {\n    return (\n        <>\n        <div>\n        <Lozenges appearance='removed'>Removed</Lozenges>\n        </div>\n        <div>\n        <Lozenges appearance='removed' isBold>\n        Removed bold\n        </Lozenges>\n        </div>\n      </>\n    );\n    \n  };\n  export default  RemoveLozengestExample;\n  "})})]}),Object(t.jsxs)("section",{children:[Object(t.jsx)(a.a,{subTitle:"In progress",subDescription:"Use inprogress lozenges to represent an in progress or current status or state, such as: in progress, open, modified."}),Object(t.jsxs)("div",{className:"py-2 flex flex-col gap-2",children:[Object(t.jsx)("div",{children:Object(t.jsx)(c.a,{appearance:"inprogress",children:"In progress"})}),Object(t.jsx)("div",{children:Object(t.jsx)(c.a,{appearance:"inprogress",isBold:!0,children:"In progress bold"})})]}),Object(t.jsx)("div",{className:"w-full pt-3",children:Object(t.jsx)(o.a,{code:'\n  import React, { useState } from "react";\n  import { Lozenges } from \'@neoKit/lozenges\';\n  \n  const InprogressLozengestExample = () => {\n    return (\n        <>\n        <div>\n        <Lozenges appearance="inprogress">In progress</Lozenges>\n      </div>\n      <div>\n        <Lozenges appearance="inprogress" isBold>\n    In progress bold\n        </Lozenges>\n      </div>\n      </>\n    );\n    \n  };\n  export default  InprogressLozengestExample;\n  '})})]}),Object(t.jsxs)("section",{children:[Object(t.jsx)(a.a,{subTitle:"New",subDescription:"Use new lozenges to represent a new status or state, such as: new, created, help."}),Object(t.jsxs)("div",{className:"py-2 flex flex-col gap-2",children:[Object(t.jsx)("div",{children:Object(t.jsx)(c.a,{appearance:"new",children:"New"})}),Object(t.jsx)("div",{children:Object(t.jsx)(c.a,{appearance:"new",isBold:!0,children:"New bold"})})]}),Object(t.jsx)("div",{className:"w-full pt-3",children:Object(t.jsx)(o.a,{code:"\n  import React, { useState } from \"react\";\n  import { Lozenges } from '@neoKit/lozenges';\n  \n  const NewLozengestExample = () => {\n    return (\n        <>\n        <div>\n            <Lozenges appearance='new'>New</Lozenges>\n          </div>\n          <div>\n            <Lozenges appearance='new' isBold>\n              New bold\n            </Lozenges>\n          </div>\n      </>\n    );\n    \n  };\n  export default  NewLozengestExample;\n  "})})]}),Object(t.jsxs)("section",{children:[Object(t.jsx)(a.a,{subTitle:"Moved",subDescription:"Use moved lozenges to represent a status or state for items that have been changed and require attention, such as: busy, blocked, missing, warning."}),Object(t.jsxs)("div",{className:"py-2 flex flex-col gap-2",children:[Object(t.jsx)("div",{children:Object(t.jsx)(c.a,{appearance:"moved",children:"Moved"})}),Object(t.jsx)("div",{children:Object(t.jsx)(c.a,{appearance:"moved",isBold:!0,children:"Moved bold"})})]}),Object(t.jsx)("div",{className:"w-full pt-3",children:Object(t.jsx)(o.a,{code:'\n  import React, { useState } from "react";\n  import { Lozenges } from \'@neoKit/lozenges\';\n  \n  const MovedLozengestExample = () => {\n    return (\n        <>\n        <div>\n        <Lozenges appearance="moved">Moved</Lozenges>\n      </div>\n      <div>\n        <Lozenges appearance="moved" isBold>\n    Moved bold\n        </Lozenges>\n      </div>\n      </>\n    );\n    \n  };\n  export default  MovedLozengestExample;\n  '})})]}),Object(t.jsxs)("section",{children:[Object(t.jsx)(a.a,{subTitle:"Max width",subDescription:"By default, the maximum width of a lozenge is 200px. When the text in the lozenge exceeds the max width, it will be truncated with an ellipsis. This maxWidth can be customized. Avoid truncation wherever possible by using shorter text in lozenges. The truncated text is not focusable or accessible. "}),Object(t.jsxs)("div",{className:"py-2 flex flex-col gap-2",children:[Object(t.jsx)("div",{children:Object(t.jsx)(c.a,{appearance:"success",children:"default max width with long text which truncates"})}),Object(t.jsx)("div",{children:Object(t.jsx)(c.a,{appearance:"success",maxWidth:100,children:"custom max width with long text which truncates"})})]}),Object(t.jsx)("div",{className:"w-full pt-3",children:Object(t.jsx)(o.a,{code:"\n  import React, { useState } from \"react\";\n  import { Lozenges } from '@neoKit/lozenges';\n  \n  const MaxLengthLozengestExample = () => {\n    return (\n        <>\n        <div>\n  <Lozenges appearance='success'>\n    default max width with long text which truncates\n  </Lozenges>\n</div>\n<div>\n  <Lozenges appearance='success' maxWidth={100}>\n    custom max width with long text which truncates\n  </Lozenges>\n</div>\n      </>\n    );\n    \n  };\n  export default  MaxLengthLozengestExample;\n  "})})]})]})}}},[["Lj70",0,1,2,3]]]);